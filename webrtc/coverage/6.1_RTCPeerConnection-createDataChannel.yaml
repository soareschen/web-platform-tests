spec_url: https://w3c.github.io/webrtc-pc/archives/20171023/webrtc.html
section: 6.1
desc: createDataChannel
steps:
  - step: 1
    status: trivial
    desc: >
      Let connection be the RTCPeerConnection object on which the method is
      invoked.

  - step: 2
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      If connection's [[IsClosed]] slot is true, throw an InvalidStateError.

  - step: 3
    status: trivial
    desc: >
      Let channel be a newly created RTCDataChannel object.

  - step: 4
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      Let channel have a [[DataChannelLabel]] internal slot initialized to the
      value of the first argument.

  - step: 5
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      If [[DataChannelLabel]] is longer than 65535 bytes, throw a TypeError.

  - step: 6
    status: trivial
    desc: >
      Let options be the second argument.

  - step: 7
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      Let channel have a [[MaxPacketLifeTime]] internal slot initialized to
      option's maxPacketLifeTime member, if present, otherwise null.

  - step: 8
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      Let channel have a [[ReadyState]] internal slot initialized to
      "connecting".

  - step: 9
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      Let channel have a [[MaxRetransmits]] internal slot initialized to
      option's maxRetransmits member, if present, otherwise null.

  - step: 10
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      Let channel have an [[Ordered]] internal slot initialized to option's
      ordered member.

  - step: 11
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      Let channel have a [[DataChannelProtocol]] internal slot initialized to
      option's protocol member.

  - step: 12
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      If [[DataChannelProtocol]] is longer than 65535 bytes long, throw a
      TypeError.

  - step: 13
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      Let channel have a [[Negotiated]] internal slot initialized to option's
      negotiated member.

  - step: 14
    status: todo
    desc: >
      Let channel have an [[DataChannelId]] internal slot initialized to
      option's id member, if it is present and [[Negotiated]] is true, otherwise
      null.

  - step: 15
    status: todo
    desc: >
      If [[Negotiated]] is true and [[DataChannelId]] is null, throw a TypeError.

  - step: 16
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      Let channel have an [[DataChannelPriority]] internal slot initialized to
      option's priority member.

  - step: 17
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      If both [[MaxPacketLifeTime]] and [[MaxRetransmits]] attributes are set
      (not null), throw a TypeError.

  - step: 18
    status: untestable
    desc: >
      If a setting, either [[MaxPacketLifeTime]] or [[MaxRetransmits]], has been
      set to indicate unreliable mode, and that value exceeds the maximum value
      supported by the user agent, the value MUST be set to the user agents
      maximum value.

  - step: 19
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      If [[DataChannelId]] is equal to 65535, which is greater than the maximum
      allowed ID of 65534 but still qualifies as an unsigned short, throw a
      TypeError.

  - step: 20
    status: tested
    files:
      - RTCPeerConnection-createDataChannel
    desc: >
      If the [[DataChannelId]] slot is null (due to no ID being passed into
      createDataChannel, or [[Negotiated]] being false), and the DTLS role of
      the SCTP transport has already been negotiated, then initialize
      [[DataChannelId]] to a value generated by the user agent, according to
      [RTCWEB-DATA-PROTOCOL], and skip to the next step.

  - step: 20
    status: untestable
    desc: >
      If no available ID could be generated, or if the value of the
      [[DataChannelId]] slot is being used by an existing RTCDataChannel,
      throw an OperationError exception.

  - step: 21
    status: tested
    files:
      - RTCPeerConnection-onnegotiationneeded
    desc: >
      If channel is the first RTCDataChannel created on connection, update the
      negotiation-needed flag for connection.

  - step: 22
    status: trivial
    desc: >
      Return channel and continue the following steps in parallel.

  - step: 23
    status: untestable
    desc: >
      Create channel's associated underlying data transport and configure it
      according to the relevant properties of channel.
