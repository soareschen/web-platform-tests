spec_url: https://w3c.github.io/webrtc-pc/archives/20171002/webrtc.html
section: 4.4.1.6
desc: Set the RTCSessionSessionDescription
steps:
  - step: 1
    status: trivial
    desc: >
      Let p be a new promise.

  - step: 2
    status: trivial
    desc: >
      In parallel, start the process to apply description as described
      in [JSEP] (section 5.5. and section 5.6.).

    steps:
      - step: 1
        status: trivial
        desc: >
          If the process to apply description fails for any reason, then
          user agent MUST queue a task that runs the following steps
        steps:
          - step: 1
            status: untestable
            desc: >
              If connection's [[IsClosed]] slot is true, then abort these steps.

          - step: 2
            status: tested
            files:
              - RTCPeerConnection-setLocalDescription-answer
              - RTCPeerConnection-setRemoteDescription-offer
              - RTCPeerConnection-setRemoteDescription-answer
            desc: >
              If the description's type is invalid for the current signaling
              state of connection as described in [JSEP] (section 5.5. and
              section 5.6.), then reject p with a newly created
              InvalidStateError and abort these steps.

          - step: 3
            status: tested
            files:
              - RTCPeerConnection-setLocalDescription-offer
            desc: >
              If description is set as a local description, if description.type
              is offer and description.sdp is not equal to connection's
              [[LastOffer]] slot, then reject p with a newly created
              InvalidModificationError and abort these steps.

          - step: 4
            status: tested
            files:
              - RTCPeerConnection-setLocalDescription-rollback
            desc: >
              If description is set as a local description, if description.type
              is "rollback" and signaling state is "stable" then reject p with
              a newly created InvalidStateError and abort these steps.

          - step: 5
            status: tested
            files:
              - RTCPeerConnection-setLocalDescription-answer
            desc: >
              If description is set as a local description, if description.type
              is "answer" or "pranswer" and description.sdp is not equal to
              connection's [[LastAnswer]] slot, then reject p with a newly
              created InvalidModificationError and abort these steps.

          - step: 6
            status: tested
            files:
              - RTCPeerConnection-setRemoteDescription-offer
            desc: >
              If the content of description is not valid SDP syntax, then reject
              p with an RTCError (with errorDetail set to "sdp-syntax-error"
              and the sdpLineNumber attribute set to the line number in the SDP
              where the syntax error was detected) and abort these steps.

          - step: 7
            status: untestable
            desc: >
              If the content of description is invalid, then reject p with a
              newly created InvalidAccessError and abort these steps.

          - step: 8
            status: untestable
            desc: >
              For all other errors, reject p with a newly created OperationError.

      - step: 2
        status: trivial
        desc: >
          If description is applied successfully, the user agent MUST queue a
          task that runs the following steps
        steps:
          - step: 1
            status: untestable
            desc: >
              If connection's [[isClosed]] slot is true, then abort these steps.

          - step: 2
            status: trivial
            desc: >
              If description is set as a local description, then run one of the
              following steps
            steps:
              - status: tested
                files:
                  - RTCPeerConnection-setLocalDescription-offer
                desc: >
                  If description is of type "offer", set
                  connection.pendingLocalDescription to description and
                  signaling state to "have-local-offer".

              - status: tested
                files:
                  - RTCPeerConnection-setLocalDescription-answer
                desc: >
                  If description is of type "answer", then this completes an
                  offer answer negotiation.

                  Set connection's currentLocalDescription to description and
                  currentRemoteDescription to the value of
                  pendingRemoteDescription.

                  Set both pendingRemoteDescription and pendingLocalDescription
                  to null.

                  Finally set connection's signaling state to "stable".

              - status: tested
                files:
                  - RTCPeerConnection-setLocalDescription-rollback
                desc: >
                  If description is of type "rollback", then this is a rollback.
                  Set connection.pendingLocalDescription to null and signaling
                  state to "stable".

              - status: tested
                files:
                  - RTCPeerConnection-setLocalDescription-pranswer
                desc: >
                  If description is of type "pranswer", then set
                  connection.pendingLocalDescription to description and
                  signaling state to "have-local-pranswer".

          - step: 3
            status: tested
            files:
              - RTCPeerConnection-setRemoteDescription
            desc: >
              Otherwise, if description is set as a remote description, then run
              one of the following steps
            steps:
              - status: todo
                desc: >
                  If description is set as a remote description, if
                  description.type is "rollback" and signaling state is "stable"
                  then reject p with a newly created InvalidStateError and abort
                  these steps.

              - status: tested
                files:
                  - RTCPeerConnection-setRemoteDescription-offer
                desc: >
                  If description is of type "offer", set
                  connection.pendingRemoteDescription attribute to description
                  and signaling state to "have-remote-offer".

              - status: tested
                files:
                  - RTCPeerConnection-setRemoteDescription-answer
                desc: >
                  If description is of type "answer", then this completes an
                  offer answer negotiation.

                  Set connection's currentRemoteDescription to description and
                  currentLocalDescription to the value of pendingLocalDescription.

                  Set both pendingRemoteDescription and pendingLocalDescription
                  to null.

                  Finally set connection's signaling state to "stable".

              - status: tested
                files:
                  - RTCPeerConnection-setRemoteDescription-rollback
                desc: >
                  If description is of type "rollback", then this is a rollback.
                  Set connection.pendingRemoteDescription to null and signaling
                  state to "stable".

              - status: tested
                files:
                  - RTCPeerConnection-setRemoteDescription-rollback
                desc: >
                  If description is of type "pranswer", then set
                  connection.pendingRemoteDescription to description and
                  signaling state to "have-remote-pranswer".


          - step: 4
            status: tested
            files:
              - RTCPeerConnection-setLocalDescription
              - RTCPeerConnection-setRemoteDescription
            desc: >
              If connection's signaling state changed above, fire a simple event
              named signalingstatechange at connection.

          - step: 5
            status: todo
            desc: >
              If description is of type "answer", and it initiates the closure
              of an existing SCTP association, as defined in [SCTP-SDP],
              Sections 10.3 and 10.4, set the value of connection's
              [[SctpTransport]] internal slot to null.

          - step: 6
            status: tested
            files:
              - RTCSctpTransport
            desc: >
              If description is of type "answer" or "pranswer", then run the
              following steps
            steps:
              - step: 1
                status: tested
                files:
                  - RTCSctpTransport
                desc: >
                  If description initiates the establishment of a new SCTP
                  association, as defined in [SCTP-SDP], Sections 10.3 and 10.4,
                  set the value of connection's [[SctpTransport]] internal slot
                  to a newly created RTCSctpTransport .

              - step: 2
                status: todo
                desc: >
                  If description negotiates the DTLS role of the SCTP transport,
                  and there is an RTCDataChannel with a null id, then generate
                  an ID according to [RTCWEB-DATA-PROTOCOL].

              - step: 2
                status: untestable
                desc: >
                  If no available ID could be generated, then run the following
                  steps
                steps:
                  - step: 1
                    status: untestable
                    desc: >
                      Let channel be the RTCDataChannel object for which an ID
                      could not be generated.

                  - step: 2
                    status: untestable
                    desc: >
                      Set channel's readyState attribute to "closed".

                  - step: 3
                    status: untestable
                    desc: >
                      Fire an event named error with an OperationError exception
                      at channel.

                  - step: 4
                    status: untestable
                    desc: >
                      Fire a simple event named close at channel.

          - step: 7
            status: tested
            files:
              - RTCPeerConnection-setDescription-transceiver
            desc: >
              If description is set as a local description, then run the
              following steps for each media description in description
              that is not yet associated with an RTCRtpTransceiver object
            steps:
              - step: 1
                status: tested
                files:
                  - RTCPeerConnection-setDescription-transceiver
                desc: >
                  Let transceiver be the RTCRtpTransceiver used to create the
                  media description.

              - step: 2
                status: tested
                files:
                  - RTCPeerConnection-setDescription-transceiver
                desc: >
                  Set transceiver's mid value to the mid of the corresponding
                  media description.

              - step: 3
                status: todo
                desc: >
                  If transceiver's [[Stopped]] slot is true, abort these sub steps.

              - step: 4
                status: todo
                desc: >
                  If description is of type "answer" or "pranswer", then set
                  transceiver's [[CurrentDirection]] slot to an
                  RTCRtpTransceiverDirection value representing the direction of
                  the corresponding media description.

            - step: 8
            status: tested
            files:
              - RTCPeerConnection-ontrack
            desc: >
              If description is set as a remote description, then run the
              following steps
            steps:
              - step: 1
                status: trivial
                desc: >
                  Let trackEvents be an empty list.

              - step: 2
                status: todo
                desc: >
                  Run the following steps for each media description in
                  description
                steps:
                  - step: 1
                    status: todo
                    desc: >
                      Let direction be an RTCRtpTransceiverDirection value
                      representing the direction from the media description,
                      but with the send and receive directions reversed to
                      represent this peer's point of view.

                  - step: 2
                    status: tested
                    files:
                      - RTCPeerConnection-setDescription-transceiver
                    desc: >
                      As described by [JSEP] (section 5.9.), attempt to find an
                      existing RTCRtpTransceiver object, transceiver, to
                      represent the media description.

                  - step: 3
                    status: todo
                    desc: >
                      If no suitable transceiver is found (transceiver is unset),
                      run the following steps
                    steps:
                      - step: 1
                        status: tested
                        files:
                          - RTCPeerConnection-ontrack
                        desc: >
                          Create an RTCRtpSender, sender, from the media
                          description.

                      - step: 2
                        status: tested
                        files:
                          - RTCPeerConnection-ontrack
                        desc: >
                          Create an RTCRtpReceiver, receiver, from the media
                          description.

                      - step: 3
                        status: todo
                        desc: >
                          Create an RTCRtpTransceiver with sender, receiver and
                          direction set to "recvonly", and let transceiver be
                          the result.
                  - step: 4
                    status: tested
                    files:
                      - RTCPeerConnection-ontrack
                    desc: >
                      Set transceiver's mid value to the mid of the
                      corresponding media description.

                  - step: 4
                    status: todo
                    desc: >
                      If the media description has no MID, and transceiver's
                      mid is unset, generate a random value as described in
                      [JSEP] (section 5.9.).

                  - step: 5
                    status: todo
                    desc: >
                      If direction is "sendrecv" or "recvonly", and transceiver's
                      [[CurrentDirection]] slot is neither "sendrecv" nor
                      "recvonly", process the addition of a remote track for the
                      media description, given transceiver and trackEvents.

                  - step: 6
                    status: todo
                    desc: >
                      If direction is "sendonly" or "inactive", and transceiver's
                      [[CurrentDirection]] slot is neither "sendonly" nor
                      "inactive", process the removal of a remote track for the
                      media description, given transceiver.

                  - step: 7
                    status: todo
                    desc: >
                      If description is of type "answer" or "pranswer", set
                      transceiver's [[CurrentDirection]] slot to direction.

                  - step: 8
                    status: todo
                    desc: >
                      If the media description is rejected, and transceiver is
                      not already stopped, stop the RTCRtpTransceiver
                      transceiver.
              - step: 3
                status: todo
                desc: >
                  For each RTCTrackEvent trackEvent in trackEvents, fire a track
                  event named track with trackEvent at the connection object.

          - step: 9
            status: todo
            desc: >
              If description is of type "rollback", then run the following steps
            steps:
              - step: 1
                status: todo
                desc: >
                  If the mid value of an RTCRtpTransceiver was set to a non-null
                  value by the RTCSessionDescription that is being rolled back,
                  set the mid value of that transceiver to null, as described by
                  [JSEP] (section 4.1.8.2.).

              - step: 2
                status: todo
                desc: >
                  If an RTCRtpTransceiver was created by applying the
                  RTCSessionDescription that is being rolled back, and a track
                  has not been attached to it via addTrack, remove that
                  transceiver from connection's set of transceivers,
                  as described by [JSEP] (section 4.1.8.2.).

              - step: 3
                status: todo
                desc: >
                  Restore the value of connection's [[SctpTransport]] internal
                  slot to its value at the last stable signaling state.

          - step: 10
            status: tested
            desc: >
              If connection's signaling state is now "stable", update the
              negotiation-needed flag. If connection's [[NegotiationNeeded]]
              slot was true both before and after this update, queue a task
              that runs the following steps

            steps:
              - step: 1
                status: untestable
                desc: >
                  If connection's [[IsClosed]] slot is true, abort these steps.

              - step: 2
                status: tested
                files:
                  - RTCPeerConnection-onnegotiationneeded
                desc: >
                  If connection's [[NegotiationNeeded]] slot is false, abort
                  these steps.

              - step: 3
                status: tested
                files:
                  - RTCPeerConnection-onnegotiationneeded
                desc: >
                  Fire a simple event named negotiationneeded at connection.

          - step: 11
            status: trivial
            desc: >
              Resolve p with undefined.
  - step: 3
    status: trivial
    desc: >
      Return p.
